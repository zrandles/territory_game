<div class="container mx-auto p-4">
  <h1 class="text-3xl font-bold mb-4">Territory Game <span class="text-sm text-gray-500">(press arrow keys to move)</span></h1>

  <div class="grid grid-cols-2 gap-4 mb-6">
    <% @factions.each do |faction| %>
      <div class="p-4 border-2 rounded <%= 'ring-4 ring-green-500' if faction.winning? %>" style="border-color: <%= faction.color %>">
        <h2 class="text-xl font-bold" style="color: <%= faction.color %>">
          <%= faction.name %> Faction
          <%= "🏆" if faction.winning? %>
        </h2>
        <p class="text-3xl font-bold"><%= faction.control_percentage %>%</p>
        <p class="text-sm text-gray-600">control (<%= faction.territories.count %> territories)</p>
        <p class="text-xs text-gray-500 mt-1">Rally Points: <%= faction.territories.where(is_rally_point: true).count %>/3</p>
      </div>
    <% end %>
  </div>

  <% if @human_player.current_position %>
    <div class="mb-4 p-4 bg-blue-100 rounded">
      <p class="font-bold">Your Position: (<%= @human_player.current_position.x %>, <%= @human_player.current_position.y %>)</p>
      <p>Use arrow keys to move</p>
    </div>
  <% end %>

  <% if flash[:notice] %>
    <div class="mb-4 p-4 bg-green-100 border border-green-400 rounded">
      <%= flash[:notice] %>
    </div>
  <% end %>

  <% if flash[:alert] %>
    <div class="mb-4 p-4 bg-red-100 border border-red-400 rounded">
      <%= flash[:alert] %>
    </div>
  <% end %>

  <div class="border-2 border-gray-300 inline-block bg-gray-100 p-2">
    <% (0..19).each do |y| %>
      <div class="flex">
        <% (0..9).each do |x| %>
          <% territory = @territories.find { |t| t.x == x && t.y == y } %>
          <%
            is_current = @human_player.current_position&.x == x && @human_player.current_position&.y == y
            bg_color = if is_current
              "bg-yellow-300 ring-4 ring-yellow-500"
            elsif territory.faction
              case territory.faction.name
              when "Red" then "bg-red-200"
              when "Blue" then "bg-blue-200"
              else "bg-gray-200"
              end
            else
              "bg-gray-50"
            end

            player_count = territory.players.count
          %>
          <div class="w-12 h-12 m-0.5 border border-gray-400 <%= bg_color %> flex items-center justify-center text-xs font-bold relative">
            <% if territory.is_rally_point %>
              <span class="absolute top-0 left-0 text-yellow-500">★</span>
            <% end %>
            <%= player_count if player_count > 0 %>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>

  <div class="mt-6">
    <h2 class="text-xl font-bold mb-2">How to Win</h2>
    <p class="mb-4 font-bold text-green-600">Reach 60% control by capturing rally points (★) and territories!</p>

    <h3 class="font-bold mb-2">Combat Rules:</h3>
    <ul class="list-disc list-inside mb-4 text-sm">
      <li>If outnumbered 2:1 on a tile → respawn at your rally point</li>
      <li>Rally points (★) are worth 3x in control calculations</li>
      <li>Control a rally point → respawn there when defeated</li>
    </ul>

    <h3 class="font-bold mb-2">Legend:</h3>
    <ul class="list-disc list-inside text-sm">
      <li><span class="text-yellow-500">★</span> Rally Point (worth 3x)</li>
      <li><span class="inline-block w-4 h-4 bg-yellow-300 ring-2 ring-yellow-500"></span> Your Position</li>
      <li><span class="inline-block w-4 h-4 bg-red-200 border border-gray-400"></span> Red Territory</li>
      <li><span class="inline-block w-4 h-4 bg-blue-200 border border-gray-400"></span> Blue Territory</li>
      <li>Number = players on tile</li>
    </ul>
  </div>
</div>

<script>
  // Auto-refresh every 3 seconds
  setTimeout(() => location.reload(), 3000);

  // Keyboard controls
  document.addEventListener('keydown', (e) => {
    <% if @human_player.current_position %>
      const currentX = <%= @human_player.current_position.x %>;
      const currentY = <%= @human_player.current_position.y %>;
      let newX = currentX;
      let newY = currentY;

      switch(e.key) {
        case 'ArrowUp':
          newY = currentY - 1;
          e.preventDefault();
          break;
        case 'ArrowDown':
          newY = currentY + 1;
          e.preventDefault();
          break;
        case 'ArrowLeft':
          newX = currentX - 1;
          e.preventDefault();
          break;
        case 'ArrowRight':
          newX = currentX + 1;
          e.preventDefault();
          break;
        default:
          return;
      }

      // Only move if within bounds
      if (newX >= 0 && newX <= 9 && newY >= 0 && newY <= 19) {
        // Create and submit form
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '<%= move_game_index_path %>';

        const csrf = document.createElement('input');
        csrf.type = 'hidden';
        csrf.name = 'authenticity_token';
        csrf.value = document.querySelector('meta[name="csrf-token"]').content;
        form.appendChild(csrf);

        const xInput = document.createElement('input');
        xInput.type = 'hidden';
        xInput.name = 'x';
        xInput.value = newX;
        form.appendChild(xInput);

        const yInput = document.createElement('input');
        yInput.type = 'hidden';
        yInput.name = 'y';
        yInput.value = newY;
        form.appendChild(yInput);

        document.body.appendChild(form);
        form.submit();
      }
    <% end %>
  });
</script>
